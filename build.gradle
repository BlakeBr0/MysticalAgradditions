repositories {
    maven {
        url 'https://maven.blakesmods.com'
    }
}

dependencies {
    implementation fg.deobf('com.blakebr0.cucumber:Cucumber:<minecraft_version>-<mod_version>')
    implementation fg.deobf('com.blakebr0.mysticalagradditions:MysticalAgradditions:<minecraft_version>-<mod_version>')
}

plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.spongepowered.mixin' version '0.7.+'
}

version = '1.20.1-7.0.2'
group = 'com.blakebr0.mysticalagradditions'

base {
    archivesName = 'MysticalAgradditions'
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"

boolean hasCucumber = findProject(':Cucumber') != null
boolean hasMysticalAgriculture = findProject(':MysticalAgriculture') != null

repositories {
    maven { url 'https://maven.blakesmods.com' }
    maven { url 'https://dvs1.progwml6.com/files/maven/' }
    maven { url 'https://maven.blamejared.com' }
    maven {
        url 'https://cursemaven.com'
        content {
            includeGroup 'curse.maven'
        }
    }
}

minecraft {
    mappings channel: 'official', version: '1.20.1'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    copyIdeResources = true

    runs {
        client {
            workingDirectory project.file('run')

            arg '-mixin.config=cucumber.mixins.json'

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            ideaModule rootProject.name != project.name ? "${rootProject.name}.${project.name}.main" : "${project.name}.main"

            mods {
                mysticalagradditions {
                    source sourceSets.main
                }

                if (hasCucumber) {
                    cucumber {
                        source project(':Cucumber').sourceSets.main
                    }
                }

                if (hasMysticalAgriculture) {
                    evaluationDependsOn(':MysticalAgriculture')

                    mysticalagriculture {
                        source project(':MysticalAgriculture').sourceSets.main
                    }
                }
            }
        }

        server {
            workingDirectory project.file('run')

            arg '-mixin.config=cucumber.mixins.json'

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            ideaModule rootProject.name != project.name ? "${rootProject.name}.${project.name}.main" : "${project.name}.main"

            mods {
                mysticalagradditions {
                    source sourceSets.main
                }

                if (hasCucumber) {
                    cucumber {
                        source project(':Cucumber').sourceSets.main
                    }
                }

                if (hasMysticalAgriculture) {
                    evaluationDependsOn(':MysticalAgriculture')

                    mysticalagriculture {
                        source project(':MysticalAgriculture').sourceSets.main
                    }
                }
            }
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${forge_version}"

    if (hasCucumber) {
        implementation(project(':Cucumber')) {
            transitive = false;
        }
    } else {
        implementation fg.deobf("com.blakebr0.cucumber:Cucumber:${cucumber_version}")
    }

    if (hasMysticalAgriculture) {
        implementation(project(':MysticalAgriculture')) {
            transitive = false
        }
    } else {
        implementation fg.deobf("com.blakebr0.mysticalagriculture:MysticalAgriculture:${mysticalagriculture_version}")
    }

    implementation fg.deobf("curse.maven:jade-324717:${jade_version}")
    compileOnly fg.deobf('slimeknights.tconstruct:TConstruct:1.18.2-3.5.1.31') // TODO: implementation
    compileOnly fg.deobf('slimeknights.mantle:Mantle:1.18.2-1.9.27') // TODO: implementation

    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:${patchouli_version}")
    runtimeOnly fg.deobf("mezz.jei:jei-${jei_mc_version}-forge:${jei_version}")

    compileOnly "mezz.jei:jei-${jei_mc_version}-common-api:${jei_version}"
    compileOnly "mezz.jei:jei-${jei_mc_version}-forge-api:${jei_version}"
}

jar {
    manifest {
        attributes([
            "Specification-Title": "Mystical Agradditions",
            "Specification-Vendor": "BlakeBr0",
            "Specification-Version": "1",
            "Implementation-Title": project.name,
            "Implementation-Version": "${version.split('-').last()}",
            "Implementation-Vendor": "BlakeBr0",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        maven(MavenPublication) {
            artifact jar
        }
    }

    repositories {
        maven {
            url = 'https://maven.blakesmods.com'

            credentials {
                username = System.getenv('BLAKESMODS_MAVEN_USERNAME')
                password = System.getenv('BLAKESMODS_MAVEN_PASSWORD')
            }

            authentication {
                basic(BasicAuthentication)
            }
        }
    }
}
